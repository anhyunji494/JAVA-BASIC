package model;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

// DAO : Data Access Object
// Member table 과 data를 주고 받는 기능들을 모아둔 클래스
public class MemberDAO {

   Connection conn = null;
   PreparedStatement psmt = null;
   ResultSet rs = null;

   // 회원가입 기능
   public int join(MemberDTO dto) {

      String id = dto.getId();
      String pw = dto.getPw();
      String name = dto.getName();
      int age = dto.getAge();

      int cnt = 0;
      // JDBC - 회원등록
      // 1.드라이버 로드(동적로딩)
      // - 컴파일러가 아래 코드를 보고 해당 드라이버를 찾아가서 적용하기때문
      try {
         connection();

         // 3.SQL문장 실행
         // - PreparedStatement

         String sql = "INSERT INTO MEMBER VALUES(?,?,?,?)";
         psmt = conn.prepareStatement(sql);
         psmt.setString(1, id);
         psmt.setString(2, pw);
         psmt.setString(3, name);
         psmt.setInt(4, age);

         // executeUpdate()는 실행한 문장의 개수를 반환
         cnt = psmt.executeUpdate();

      } catch (SQLException e) {
         // TODO Auto-generated catch block
         e.printStackTrace();
      } finally {
         close();
      }
      return cnt;
   }

   // 로그인 기능
   public void login(String id, String pw) {
      try {
         // DB연동해주는 메소드
         connection();

         String sql = "select * from member where id = ? and pw = ?";
         psmt = conn.prepareStatement(sql);

         psmt.setString(1, id);
         psmt.setString(2, pw);

         // CRUD : create(생성), Read(읽기, 조회), Update(수정, 갱신), Delete(삭제)
         // executeUpdate() : 삽입(insert), 수정(update), 삭제(delete)
         // -> 실행에 성공했을 때 수행된 row 수를 반환(int)
         // executeQuery() : 조회(select)
         // -> ResultSet : 커서 객체

         rs = psmt.executeQuery();

         if (rs.next()) {
            String login_id = rs.getString(1);
            String login_pw = rs.getString("PW");
            String login_name = rs.getString(3);
            int login_age = rs.getInt(4);
            System.out.println(login_name + "님 환영합니다!");
         }

      } catch (Exception e) {
         // TODO Auto-generated catch block
         e.printStackTrace();
      } finally {
         close();
      }

   }

   public void memberList() {

      try {

         connection();

         String sql = "select * from member";

         psmt = conn.prepareStatement(sql);

         rs = psmt.executeQuery();

         while (rs.next()) {
            String id = rs.getString(1);
            String pw = rs.getString(2);
            String name = rs.getString(3);
            int age = rs.getInt(4);
            System.out.printf("%s\t%s\t%s\t%d\n", id, pw, name, age);
         }

      } catch (Exception e) {
         e.printStackTrace();
      } finally {
         close();
      }

   }

   private void close() {
      // catch넘어가거나 아니면 try가 잘 실행되도
      // 무조건 마지막에 실행되는 부분
      try {
         if (rs != null) {
            rs.close();
         }
         if (psmt != null) {
            psmt.close();
         }
         if (conn != null) {
            conn.close();
         }

      } catch (SQLException e) {
         // TODO Auto-generated catch block
         e.printStackTrace();
      }
   }

   private void connection() {
      // 에러가 나는 이유
      // - 해당위치에 드라이버 파일이 없을 수도 있고
      // - 잘 못 된 경로를 입력했을때
      try {
         Class.forName("oracle.jdbc.driver.OracleDriver");
         // 2.Connection 연결
         // - 연결하기위해서는 3개의 정보필요 (주소, 계정, 비밀번호)
         String db_url = "jdbc:oracle:thin:@localhost:1521:xe";
         String db_id = "hr";
         String db_pw = "hr";

         conn = DriverManager.getConnection(db_url, db_id, db_pw);

         if (conn != null) {
            System.out.println("Connection 연결 성공");
         } else {
            System.out.println("Connection 연결 실패");
         }
      } catch (ClassNotFoundException e) {
         // TODO Auto-generated catch block
         e.printStackTrace();
      } catch (SQLException e) {
         // TODO Auto-generated catch block
         e.printStackTrace();
      }

   }

   public void delete(String id) {
      // TODO Auto-generated method stub

      connection();

      String sql = "DELETE FROM MEMBER WHERE ID = ?";

      try {
         psmt = conn.prepareStatement(sql);
         psmt.setString(1, id);
         int cnt = psmt.executeUpdate();

         if (cnt > 0) {
            System.out.println("회원탈퇴 성공");
         } else {
            System.out.println("회원탈퇴 실패");
         }

      } catch (SQLException e) {
         // TODO Auto-generated catch block
         e.printStackTrace();
      } finally {
         close();
      }

   }

   public void update(MemberDTO dto) {
      // TODO Auto-generated method stub
      connection();

      String sql = "UPDATE MEMBER SET PW = ?, NAME = ?, AGE = ? WHERE ID = ?";
      try {
         psmt = conn.prepareStatement(sql);
         psmt.setString(1, dto.getPw());
         psmt.setString(2, dto.getName());
         psmt.setInt(3, dto.getAge());
         psmt.setString(4, dto.getId());

         int cnt = psmt.executeUpdate();

         if (cnt > 0) {
            System.out.println("회원정보수정 성공");
         } else {
            System.out.println("회원정보수정 실패");
         }

      } catch (SQLException e) {
         // TODO Auto-generated catch block
         e.printStackTrace();
      } finally {
         close();
      }

   }

}